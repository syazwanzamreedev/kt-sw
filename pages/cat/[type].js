import React, { useState, useEffect } from 'react'
import Head from 'next/head'
import Link from 'next/link'
import axios from 'axios'
import { FiDelete } from 'react-icons/fi';

import styles from '../../styles/Home.module.css'

const Card = ({ key, text, handleOnChange, onClickDelete, handleKeyPress }) => {
  return (
    <div key={key} style={{ paddingTop: "10px", display: "flex", flexDirection: "row", flexWrap: "nowrap", justifyContent: "space-between" }}>
      <div style={{ width: "80%"}}>
          <p
            contenteditable="true"
            dangerouslySetInnerHTML={{__html: text}}
            onInput={handleOnChange}
            onKeyPress={handleKeyPress}
          />
      </div>
      <div onClick={onClickDelete} style={{ marginTop: "16px", cursor: "pointer", width: "8%", textAlign: "center" }}><FiDelete /></div>
    </div>
  )
}

const Type = ({
  type: typeFromInitialProps,
  data: dataFromInitialProps,
  totalPages: totalPagesFromInitialProps,
  currentPage: currentPageFromInitialProps
}) => {
  const [type, setType] = useState(typeFromInitialProps)
  const [data, setData] = useState(dataFromInitialProps)
  const [totalPages, setTotalPages] = useState(totalPagesFromInitialProps)
  const [currentPage, setCurrentPage] = useState(currentPageFromInitialProps)

  useEffect(() => {
    setData(dataFromInitialProps)
  }, [dataFromInitialProps])

  const handleClickPage = (val) => {
    setCurrentPage(val)
  }

  const handleEdit = (e, i) => {
    const newData = [...data]
    newData[i].title = e.target.textContent

    setData(newData)
  }

  const handleDelete = (e, i) => {
    const newData = [...data]
    newData.splice(i, 1)

    setData(newData)
  }

  const handleAddItem = () => {
    const newItem =  prompt(`Add ${type}: `)
    const newData = [...data]
    if (newItem.length > 0 && newItem.trim() !== "") newData.unshift(type === "films" ? { title: newItem } : { name: newItem })

    setData(newData)
  }

  const handleKeyPress = (e) => {
    if(e.which == 13) e.preventDefault();
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Star Wars</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <img src="https://www.logo.wine/a/logo/Star_Wars/Star_Wars-Logo.wine.svg" width="200"  alt="Star Wars logo" />
        <button onClick={handleAddItem} style={{ display: "flex", alignItem: "center", padding: "10px" }}>Add new {type}</button>
        <div style={{ minWidth: "300px" }}>
          {
            data.length > 0 ? data.map((d, i) => {
              const container = type === "films" ? (
                <Card
                  key={d.title}
                  text={d.title}
                  onClickDelete={(e) => handleDelete(e, i)}
                  handleOnChange={(e) => handleEdit(e, i)}
                  handleKeyPress={(e) => handleKeyPress(e)}
                />
              ) : (
                <Card
                  key={d.name}
                  text={d.name}
                  onClickDelete={(e) => handleDelete(e, i)}
                  handleOnChange={(e) => handleEdit(e, i)}
                  handleKeyPress={(e) => handleKeyPress(e)}
                />
              )

              return container
            }) : <a>empty list, add your data</a>
          }
        </div>
      </main>
        <div style={{ paddingBottom: "20px" }}>
          {
            totalPages > 1 && [...Array(totalPages)].map((x,i) => {
              const as = `/cat/${type}?page=${i+1}`
              const fontWeight = i+1 === currentPage ? "bold" : "normal"

              return (
                <Link href={as}>
                  <a
                    style={{ display: "inline", padding: "5px", fontWeight: fontWeight }}
                    onClick={() => handleClickPage(i+1)}
                    >
                      {i+1}
                    </a>
                </Link>
              )
            })
          }
          <Link href="/"><a style={{ display: "inline", padding: "5px"}}>Home</a></Link>
        </div>
      <footer className={styles.footer}>
        <a>SZ X KT</a>
      </footer>
    </div>
  )
}

Type.getInitialProps = async ({ req, res, query }) => {
  const { type, page } = query

  const response = await axios.get(`https://swapi.dev/api/${type}/?page=${!page ? 1 : page}`)
      .then(res => res)
      .catch(err => err)

  const data = response.data.results
  const totalPages = Math.ceil(response.data.count/10)

  return ({
    type: query.type,
    data: data,
    totalPages: totalPages,
    currentPage: !page ? 1 : Number(page)
  })
}

export default Type
